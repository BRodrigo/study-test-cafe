{
  "_args": [
    [
      "testcafe@alpha",
      "/home/ext.breno.ferreira/Área de Trabalho/testCafe"
    ]
  ],
  "_from": "testcafe@alpha",
  "_hasShrinkwrap": false,
  "_id": "testcafe@1.1.1-alpha.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/testcafe",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/testcafe_1.1.1-alpha.2_1553695794202_0.9942646076930666"
  },
  "_npmUser": {
    "email": "belym.a.2105@gmail.com",
    "name": "belym.a.2105"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "name": "testcafe",
    "raw": "testcafe@alpha",
    "rawSpec": "alpha",
    "scope": null,
    "spec": "alpha",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/testcafe/-/testcafe-1.1.1-alpha.2.tgz",
  "_shasum": "d52a243a23eabf1764f2e94c002bda8a9d400012",
  "_shrinkwrap": null,
  "_spec": "testcafe@alpha",
  "_where": "/home/ext.breno.ferreira/Área de Trabalho/testCafe",
  "author": {
    "name": "Developer Express Inc.",
    "url": "https://www.devexpress.com/"
  },
  "bin": {
    "testcafe": "./bin/testcafe-with-v8-flag-filter.js"
  },
  "bugs": {
    "url": "https://github.com/DevExpress/testcafe/issues"
  },
  "dependencies": {
    "@types/node": "^10.12.19",
    "async-exit-hook": "^1.1.2",
    "babel-core": "^6.22.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-for-of-as-array": "^1.1.1",
    "babel-plugin-transform-runtime": "^6.22.0",
    "babel-preset-env": "^1.1.8",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-stage-2": "^6.22.0",
    "babel-runtime": "^6.22.0",
    "bin-v8-flags-filter": "^1.1.2",
    "callsite": "^1.0.0",
    "callsite-record": "^4.0.0",
    "chai": "^4.1.2",
    "chalk": "^1.1.0",
    "chrome-emulated-devices-list": "^0.1.0",
    "chrome-remote-interface": "^0.25.3",
    "coffeescript": "^2.3.1",
    "commander": "^2.8.1",
    "debug": "^2.2.0",
    "dedent": "^0.4.0",
    "del": "^3.0.0",
    "elegant-spinner": "^1.0.1",
    "emittery": "^0.4.1",
    "endpoint-utils": "^1.0.2",
    "error-stack-parser": "^1.3.6",
    "globby": "^3.0.1",
    "graceful-fs": "^4.1.11",
    "graphlib": "^2.1.5",
    "gulp-data": "^1.3.1",
    "import-lazy": "^3.1.0",
    "indent-string": "^1.2.2",
    "is-ci": "^1.0.10",
    "is-docker": "^1.1.0",
    "is-glob": "^2.0.1",
    "is-stream": "^1.1.0",
    "json5": "^2.1.0",
    "lodash": "^4.17.11",
    "log-update-async-hook": "^2.0.2",
    "make-dir": "^1.3.0",
    "map-reverse": "^1.0.1",
    "moment": "^2.10.3",
    "moment-duration-format-commonjs": "^1.0.0",
    "mustache": "^2.1.2",
    "nanoid": "^1.0.1",
    "node-version": "^1.0.0",
    "os-family": "^1.0.0",
    "parse5": "^1.5.0",
    "pify": "^2.3.0",
    "pinkie": "^2.0.4",
    "pngjs": "^3.3.1",
    "promisify-event": "^1.0.0",
    "ps-node": "^0.1.6",
    "qrcode-terminal": "^0.10.0",
    "read-file-relative": "^1.2.0",
    "replicator": "^1.0.3",
    "resolve-cwd": "^1.0.0",
    "resolve-from": "^4.0.0",
    "sanitize-filename": "^1.6.0",
    "source-map-support": "^0.5.5",
    "strip-bom": "^2.0.0",
    "testcafe-browser-tools": "1.6.5",
    "testcafe-hammerhead": "14.5.1",
    "testcafe-legacy-api": "3.1.11",
    "testcafe-reporter-json": "^2.1.0",
    "testcafe-reporter-list": "^2.1.0",
    "testcafe-reporter-minimal": "^2.1.0",
    "testcafe-reporter-spec": "^2.1.1",
    "testcafe-reporter-xunit": "^2.1.0",
    "time-limit-promise": "^1.0.2",
    "tmp": "0.0.28",
    "tree-kill": "^1.1.0",
    "typescript": "^3.3.3",
    "useragent": "^2.1.7"
  },
  "description": "Automated browser testing for the modern web development stack.",
  "devDependencies": {
    "@belym.a.2105/broken-link-checker": "^0.7.9",
    "@ffmpeg-installer/ffmpeg": "^1.0.17",
    "@types/chai": "^3.5.2",
    "babel-eslint": "^7.1.1",
    "babel-plugin-add-module-exports": "^0.2.0",
    "basic-auth": "^1.1.0",
    "body-parser": "^1.17.1",
    "browserstack-connector": "^0.1.7",
    "caller": "^1.0.1",
    "chai-string": "^1.5.0",
    "connect": "^3.4.0",
    "cross-spawn": "^4.0.0",
    "del-cli": "^1.1.0",
    "dom-walk": "^0.1.1",
    "eslint-plugin-hammerhead": "0.2.0",
    "eslint-plugin-no-only-tests": "^2.0.1",
    "express": "^4.13.3",
    "express-ntlm": "^2.1.5",
    "gulp": "^4.0.0",
    "gulp-babel": "^6.1.1",
    "gulp-clone": "^2.0.1",
    "gulp-eslint": "^4.0.0",
    "gulp-gh-pages": "^0.6.0-6",
    "gulp-git": "^2.4.2",
    "gulp-less": "^4.0.0",
    "gulp-ll-next": "^2.1.0",
    "gulp-mocha": "^5.0.0",
    "gulp-mocha-simple": "^1.0.0",
    "gulp-mustache": "^3.0.1",
    "gulp-prompt": "^1.0.1",
    "gulp-qunit-harness": "^1.0.2",
    "gulp-rename": "^1.3.0",
    "gulp-sourcemaps": "^2.6.4",
    "gulp-step": "^1.0.1",
    "gulp-uglify": "^3.0.0",
    "gulp-util": "^3.0.7",
    "gulp-webmake": "0.0.4",
    "http-server": "^0.11.1",
    "js-yaml": "^3.6.1",
    "license-checker": "^20.0.0",
    "markdownlint": ">=0.0.8",
    "merge-stream": "^1.0.1",
    "minimist": "^1.2.0",
    "multer": "^1.1.0",
    "npm-auditor": "^1.1.1",
    "openssl-self-signed-certificate": "^1.1.6",
    "opn": "^4.0.2",
    "proxyquire": "^2.1.0",
    "publish-please": "^5.4.3",
    "recursive-copy": "^2.0.5",
    "request": "^2.58.0",
    "run-sequence": "^1.2.2",
    "saucelabs-connector": "^0.2.0",
    "semver": "^5.6.0",
    "serve-static": "^1.10.0",
    "sinon": "^7.3.0",
    "stack-chain": "^2.0.0",
    "strip-ansi": "^3.0.0",
    "testcafe-browser-provider-browserstack": "^1.7.1",
    "webmake": "0.3.42"
  },
  "directories": {},
  "dist": {
    "fileCount": 226,
    "integrity": "sha512-GclefES9KqaMSPHfeEfJ0E/A5VSgdeTNY5cNmtsCOoRhFG13rCKQiO/12fZ1n30Nrk1j9ReEJmMxAC5tZk6AMA==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcm4QyCRA9TVsSAnZWagAArk4QAIyZm/d0NE419aKdJYdl\n0V+UlgwXAxSkxirv7nj4go58r2LVUrtUN8Vy5cn9z1tZJHylRr/r/c+K5HtD\nFgTGZrKzfZv9wB/qmndpBgiD5ngGJxgw5QunRoJad3Yqy6SdqZJbuHWn0BIk\nIfOQ7z5Vyx8vWqJncXwacUJTO/nyZIz8r7Iu4pSW5b9jb5iSCPxswCy3KtGp\nEJxl4G9G7LE+bZBiaOMznPxIoit5aDoV3wwrsCfSwAdEbSnsWDVdgl5DHmgG\n8QyjEwF5hnRJr0Eq3cf6kYP++McXy2PU3ykrmgFkNB/e3b00XJSOL8VoqIFM\nc4LmiDmWjwcS2G5lHiKH6qCRUqekMCh/x9rQsV0meGjqIL75obwUKNf6/Vxn\nFnd/XiLqDg6gSwnB6LdK+XzeAokd2X1XamV4t3B+b4UsSVjeU1IehT0YON6I\nq2VEFLw1+OL+SnDr+W7EvVZjtZbKD5R+De2YP5sWmAFEp+uANlO6QlZFiMU/\n4jih/73JV3NgceE2OARFjhEySBiGAZTEnj0b8g/sJ8PGEOQpI1sP54TyrlXI\n4v1z9G47gO6xE34fmmU71u0L/MpWF2pvVwtVM04w1bSC6FAqx56EEMHV19hQ\nuu9qtlozGwmUP4ClIE3rytbCGqvrudcw3HOtkr5xKONBCu8v3193H7y8RTlb\netg2\r\n=hxfF\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "d52a243a23eabf1764f2e94c002bda8a9d400012",
    "tarball": "https://registry.npmjs.org/testcafe/-/testcafe-1.1.1-alpha.2.tgz",
    "unpackedSize": 3868594
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "gitHead": "8fd84fba4810a00b992c1f23ccd2d9794abbaf90",
  "homepage": "https://devexpress.github.io/testcafe/",
  "keywords": [
    "ES2015",
    "ES6",
    "QA",
    "assert",
    "assertion",
    "async",
    "automated",
    "automation",
    "await",
    "browser",
    "browsers",
    "functional",
    "runner",
    "tdd",
    "test",
    "testing",
    "webapp",
    "website"
  ],
  "license": "MIT",
  "main": "lib/index",
  "maintainers": [
    {
      "name": "belym.a.2105",
      "email": "belym.a.2105@gmail.com"
    },
    {
      "name": "churkin",
      "email": "alam17@mail.ru"
    },
    {
      "name": "kirovboris",
      "email": "boris.s.kirov@gmail.com"
    },
    {
      "name": "lavrovartem",
      "email": "artjomlav@gmail.com"
    },
    {
      "name": "miherlosev",
      "email": "miherlosev@mail.ru"
    }
  ],
  "name": "testcafe",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"https://www.devexpress.com/products/testcafestudio/?utm_source=github.com&utm_medium=referral&utm_campaign=tc-gh-banner\">\n    <img src=\"https://raw.github.com/DevExpress/testcafe/master/media/testcafe-studio-banner.png\" alt=\"testcafe-studio\" />\n  </a>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://devexpress.github.io/testcafe\">\n        <img src=\"https://raw.githubusercontent.com/DevExpress/testcafe/master/media/testcafe-logo.svg?sanitize=true\" alt=\"testcafe\" />\n    </a>\n</p>\n\n<p align=\"center\">\n<a href=\"https://ci.appveyor.com/project/DevExpress/testcafe\"><img alt=\"Functional Windows desktop\" src=\"https://ci.appveyor.com/api/projects/status/ftelkyuiji8lyadf?svg=true\"></a>\n<a href=\"https://travis-ci.org/DevExpress/testcafe\"><img alt=\"All Travis tasks (server, client, functional: mobile, macOS, Edge)\" src=\"https://travis-ci.org/DevExpress/testcafe.svg\"></a>\n<a href=\"https://www.npmjs.com/package/testcafe\"><img alt=\"NPM Version\" src=\"https://img.shields.io/npm/v/testcafe.svg\" data-canonical-src=\"https://img.shields.io/npm/v/testcafe.svg\" style=\"max-width:100%;\"></a>\n</p>\n\n<p align=\"center\">\n<i>A Node.js tool to automate end-to-end web testing.<br/>Write tests in JS or TypeScript, run them and view results.</i>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://devexpress.github.io/testcafe/\">Homepage</a> &nbsp&nbsp•&nbsp&nbsp\n  <a href=\"https://devexpress.github.io/testcafe/documentation/getting-started/\">Documentation</a> &nbsp&nbsp•&nbsp&nbsp\n  <a href=\"https://devexpress.github.io/testcafe/faq/\">FAQ</a> &nbsp&nbsp•&nbsp&nbsp\n  <a href=\"https://devexpress.github.io/testcafe/support/\">Support</a>\n</p>\n\n* **Works on all popular environments**: TestCafe runs on Windows, MacOS, and Linux. It supports desktop, mobile, remote and cloud [browsers](https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/browser-support.html) (UI or headless).\n* **1 minute to set up**: You [do not need WebDriver](https://devexpress.github.io/testcafe/faq/#i-have-heard-that-testcafe-does-not-use-selenium-how-does-it-operate) or any other testing software. Install TestCafe with one command, and you are ready to test: `npm install -g testcafe`\n* **Free and open source**: TestCafe is free to use under the [MIT license](https://github.com/DevExpress/testcafe/blob/master/LICENSE). [Plugins](#plugins) provide custom reports, integration with other tools, launching tests from IDE, etc. You can use the plugins made by the GitHub community or make your own.\n\n![Install TestCafe and Run a Test](https://raw.githubusercontent.com/DevExpress/testcafe/master/media/install-and-run-test.gif)\n\n<p align=\"center\">\n<i>Running a sample test in Safari</i>\n</p>\n\n## Table of contents\n\n* [Features](#features)\n* [IDE for End-to-End Web Testing](#ide-for-end-to-end-web-testing)\n* [Getting Started](#getting-started)\n* [Documentation](#documentation)\n* [Get Help](#get-help)\n* [Issue Tracker](#issue-tracker)\n* [Stay in Touch](#stay-in-touch)\n* [Contributing](#contributing)\n* [Plugins](#plugins)\n* [Different Versions of TestCafe](#different-versions-of-testcafe)\n* [Badge](#badge)\n* [License](#license)\n* [Creators](#creators)\n\n## Features\n\n**Stable tests and no manual timeouts**<br/>\nTestCafe automatically waits for page loads and XHRs before the test starts and after each action.\nIt also features smart test actions and assertions that wait for page elements to appear.\nYou can change the maximum wait time.\nIf elements load faster, tests skip the timeout and continue.\n\n**Rapid test development tool**<br/>\nChanges in test code immediately restart the test, and you see the results instantly.<br/>\nSee how it works in the [TestCafe Live repository](https://github.com/DevExpress/testcafe-live).\n\n**Latest JS and TypeScript support**<br/>\nTestCafe supports the latest JavaScript features, including ES2017 (for example, async/await).\nYou can also [use TypeScript](https://devexpress.github.io/testcafe/documentation/test-api/typescript-support.html)\nif you prefer a strongly typed language.\n\n**Detects JS errors in your code**<br/>\nTestCafe reports JS errors that it finds on the webpage.\nTests automatically fail because of that.\nHowever, you can disable this.\n\n**Concurrent tests launch**<br/>\nTestCafe can open multiple instances of the same browser to run parallel\ntests which decreases test execution time.\n\n**PageObject pattern support**<br/>\nThe TestCafe's [Test API](https://devexpress.github.io/testcafe/documentation/test-api/)\nincludes a high-level selector library, assertions, etc.\nYou can combine them to implement readable tests with the [PageObject pattern](https://devexpress.github.io/testcafe/documentation/recipes/using-page-model.html).\n\n```js\nconst macOSInput = Selector('.column').find('label').withText('MacOS').child('input');\n```\n\n**Easy to include in a continuous integration system**<br/>\nYou can run TestCafe from a console, and its reports can be viewed in a CI system's interface\n(TeamCity, Jenkins, Travis & etc.)\n\n## IDE for End-to-End Web Testing\n\nWe've got one more tool for you!\n\nCheck out [TestCafe Studio](https://www.devexpress.com/products/testcafestudio/?utm_source=github.com&utm_medium=referral&utm_campaign=tc-gh-ide): all the perks of TestCafe + GUI + Visual Test Recorder\n\n![Get Started with TestCafe Studio](https://raw.githubusercontent.com/DevExpress/testcafe/master/media/testcafe-studio-get-started.gif)\n\n<p align=\"center\">\n<i>Record and Run a Test in TestCafe Studio</i>\n</p>\n\n## Getting Started\n\n### Installation\n\nEnsure that [Node.js](https://nodejs.org/) (version 6 or newer) and [npm](https://www.npmjs.com/) are installed on your computer before running it:\n\n```sh\nnpm install -g testcafe\n```\n\n### Creating the Test\n\nAs an example, we are going to test the [https://devexpress.github.io/testcafe/example](https://devexpress.github.io/testcafe/example) page.\n\nCreate a `.js` or `.ts` file on your computer.\nNote that it needs to have a specific structure: tests must be organized into fixtures.\nYou can paste the following code to see the test in action:\n\n```js\nimport { Selector } from 'testcafe'; // first import testcafe selectors\n\nfixture `Getting Started`// declare the fixture\n    .page `https://devexpress.github.io/testcafe/example`;  // specify the start page\n\n\n//then create a test and place your code there\ntest('My first test', async t => {\n    await t\n        .typeText('#developer-name', 'John Smith')\n        .click('#submit-button')\n\n        // Use the assertion to check if the actual header text is equal to the expected one\n        .expect(Selector('#article-header').innerText).eql('Thank you, John Smith!');\n});\n```\n\n### Running the Test\n\nCall the following command in a command shell.\nSpecify the [target browser](https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#browser-list)\nand [file path](https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#file-pathglob-pattern).\n\n```sh\ntestcafe chrome test1.js\n```\n\nTestCafe opens the browser and starts executing the test.\n\n> Important! Make sure to stay in the browser tab that is running tests.\n> Do not minimize the browser window. Tests are not guaranteed to execute correctly\n> in inactive tabs and minimized browser windows because they switch to a lower resource consumption mode.\n\n### Viewing the Results\n\nTestCafe outputs the results into a command shell by default. See [Reporters](https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/reporters.html)\nfor more information. You can also use [plugins](#plugins) to customize the reports.\n\n![Test Report](docs/articles/images/report.png)\n\nRead the [Getting Started](https://devexpress.github.io/testcafe/documentation/getting-started/) page for a more detailed guide.\n\n## Documentation\n\nGo to our website for full [documentation](https://devexpress.github.io/testcafe/documentation/getting-started/) on TestCafe.\n\n## Get Help\n\nJoin the TestCafe community on Stack Overflow to get help. Ask and answer [questions with the TestCafe tag](https://stackoverflow.com/questions/tagged/testcafe).\n\n## Issue Tracker\n\nUse our GitHub issues page to [report bugs](https://github.com/DevExpress/testcafe/issues/new?template=bug-report.md) and [suggest improvements](https://github.com/DevExpress/testcafe/issues/new?template=feature_request.md).\n\n## Stay in Touch\n\nFollow us on [Twitter](https://twitter.com/DXTestCafe). We post TestCafe news and updates, several times a week.\n\n## Contributing\n\nRead our [Contributing Guide](https://github.com/DevExpress/testcafe/blob/master/CONTRIBUTING.md) to learn how to contribute to the project.\n\nTo create your own plugin for TestCafe, you can use these plugin generators:\n\n* [Build a browser provider](https://devexpress.github.io/testcafe/documentation/extending-testcafe/browser-provider-plugin/)\n  to set up tests on your on-premises server farm, to use a cloud testing platform, or to start your local browsers in a special way. Use this [Yeoman generator](https://www.npmjs.com/package/generator-testcafe-browser-provider) to write only a few lines of code.\n* To [build a custom reporter](https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/)\n  with your formatting and style, check out this [generator](https://www.npmjs.com/package/generator-testcafe-reporter).\n\nIf you want your plugin to be listed below, [send us a note in a Github issue](https://github.com/DevExpress/testcafe/issues/new).\n\nThank you to all the people who already contributed to TestCafe!\n\n[<img alt=\"Nuarat\" src=\"https://avatars0.githubusercontent.com/u/11683678?v=4&s=117\" width=\"117\">](https://github.com/Nuarat) |[<img alt=\"Farfurix\" src=\"https://avatars2.githubusercontent.com/u/30019338?v=4&s=117\" width=\"117\">](https://github.com/Farfurix) |[<img alt=\"aleks-pro\" src=\"https://avatars1.githubusercontent.com/u/14822473?v=4&s=117\" width=\"117\">](https://github.com/aleks-pro) |[<img alt=\"ericyd\" src=\"https://avatars2.githubusercontent.com/u/8379268?v=4&s=117\" width=\"117\">](https://github.com/ericyd) |[<img alt=\"NickCis\" src=\"https://avatars0.githubusercontent.com/u/174561?v=4&s=117\" width=\"117\">](https://github.com/NickCis) |[<img alt=\"andrewbranch\" src=\"https://avatars0.githubusercontent.com/u/3277153?v=4&s=117\" width=\"117\">](https://github.com/andrewbranch) |\n:---: |:---: |:---: |:---: |:---: |:---: |\n[Nuarat](https://github.com/Nuarat) |[Farfurix](https://github.com/Farfurix) |[aleks-pro](https://github.com/aleks-pro) |[ericyd](https://github.com/ericyd) |[NickCis](https://github.com/NickCis) |[andrewbranch](https://github.com/andrewbranch) |\n\n[<img alt=\"radarhere\" src=\"https://avatars2.githubusercontent.com/u/3112309?v=4&s=117\" width=\"117\">](https://github.com/radarhere) |[<img alt=\"ai\" src=\"https://avatars1.githubusercontent.com/u/19343?v=4&s=117\" width=\"117\">](https://github.com/ai) |[<img alt=\"AndyWendt\" src=\"https://avatars0.githubusercontent.com/u/6130713?v=4&s=117\" width=\"117\">](https://github.com/AndyWendt) |[<img alt=\"arubtsov\" src=\"https://avatars0.githubusercontent.com/u/10169557?v=4&s=117\" width=\"117\">](https://github.com/arubtsov) |[<img alt=\"lzxb\" src=\"https://avatars0.githubusercontent.com/u/8424643?v=4&s=117\" width=\"117\">](https://github.com/lzxb) |[<img alt=\"caseyWebb\" src=\"https://avatars3.githubusercontent.com/u/5419074?v=4&s=117\" width=\"117\">](https://github.com/caseyWebb) |\n:---: |:---: |:---: |:---: |:---: |:---: |\n[radarhere](https://github.com/radarhere) |[ai](https://github.com/ai) |[AndyWendt](https://github.com/AndyWendt) |[arubtsov](https://github.com/arubtsov) |[lzxb](https://github.com/lzxb) |[caseyWebb](https://github.com/caseyWebb) |\n\n[<img alt=\"VasilyStrelyaev\" src=\"https://avatars1.githubusercontent.com/u/11459924?v=4&s=117\" width=\"117\">](https://github.com/VasilyStrelyaev) |[<img alt=\"AndreyBelym\" src=\"https://avatars1.githubusercontent.com/u/4479386?v=4&s=117\" width=\"117\">](https://github.com/AndreyBelym) |[<img alt=\"AlexanderMoskovkin\" src=\"https://avatars0.githubusercontent.com/u/12047804?v=4&s=117\" width=\"117\">](https://github.com/AlexanderMoskovkin) |[<img alt=\"inikulin\" src=\"https://avatars1.githubusercontent.com/u/453071?v=4&s=117\" width=\"117\">](https://github.com/inikulin) |[<img alt=\"helen-dikareva\" src=\"https://avatars1.githubusercontent.com/u/12034551?v=4&s=117\" width=\"117\">](https://github.com/helen-dikareva) |[<img alt=\"miherlosev\" src=\"https://avatars2.githubusercontent.com/u/4133518?v=4&s=117\" width=\"117\">](https://github.com/miherlosev) |\n:---: |:---: |:---: |:---: |:---: |:---: |\n[VasilyStrelyaev](https://github.com/VasilyStrelyaev) |[AndreyBelym](https://github.com/AndreyBelym) |[AlexanderMoskovkin](https://github.com/AlexanderMoskovkin) |[inikulin](https://github.com/inikulin) |[helen-dikareva](https://github.com/helen-dikareva) |[miherlosev](https://github.com/miherlosev) |\n\n[<img alt=\"AlexKamaev\" src=\"https://avatars3.githubusercontent.com/u/1678902?v=4&s=117\" width=\"117\">](https://github.com/AlexKamaev) |[<img alt=\"MargaritaLoseva\" src=\"https://avatars2.githubusercontent.com/u/12034505?v=4&s=117\" width=\"117\">](https://github.com/MargaritaLoseva) |[<img alt=\"churkin\" src=\"https://avatars3.githubusercontent.com/u/5182202?v=4&s=117\" width=\"117\">](https://github.com/churkin) |[<img alt=\"LavrovArtem\" src=\"https://avatars2.githubusercontent.com/u/5373460?v=4&s=117\" width=\"117\">](https://github.com/LavrovArtem) |[<img alt=\"kirovboris\" src=\"https://avatars0.githubusercontent.com/u/3633477?v=4&s=117\" width=\"117\">](https://github.com/kirovboris) |[<img alt=\"AlexSkorkin\" src=\"https://avatars3.githubusercontent.com/u/995726?v=4&s=117\" width=\"117\">](https://github.com/AlexSkorkin) |\n:---: |:---: |:---: |:---: |:---: |:---: |\n[AlexKamaev](https://github.com/AlexKamaev) |[MargaritaLoseva](https://github.com/MargaritaLoseva) |[churkin](https://github.com/churkin) |[LavrovArtem](https://github.com/LavrovArtem) |[kirovboris](https://github.com/kirovboris) |[AlexSkorkin](https://github.com/AlexSkorkin) |\n\n[<img alt=\"smockle\" src=\"https://avatars1.githubusercontent.com/u/3104489?v=4&s=117\" width=\"117\">](https://github.com/smockle) |[<img alt=\"beyondcompute\" src=\"https://avatars0.githubusercontent.com/u/248055?v=4&s=117\" width=\"117\">](https://github.com/beyondcompute) |[<img alt=\"GeoffreyBooth\" src=\"https://avatars2.githubusercontent.com/u/456802?v=4&s=117\" width=\"117\">](https://github.com/GeoffreyBooth) |[<img alt=\"mcjim\" src=\"https://avatars0.githubusercontent.com/u/485440?v=4&s=117\" width=\"117\">](https://github.com/mcjim) |[<img alt=\"dej611\" src=\"https://avatars1.githubusercontent.com/u/924948?v=4&s=117\" width=\"117\">](https://github.com/dej611) |[<img alt=\"MatthewNielsen27\" src=\"https://avatars2.githubusercontent.com/u/35040439?v=4&s=117\" width=\"117\">](https://github.com/MatthewNielsen27) |\n:---: |:---: |:---: |:---: |:---: |:---: |\n[smockle](https://github.com/smockle) |[beyondcompute](https://github.com/beyondcompute) |[GeoffreyBooth](https://github.com/GeoffreyBooth) |[mcjim](https://github.com/mcjim) |[dej611](https://github.com/dej611) |[MatthewNielsen27](https://github.com/MatthewNielsen27) |\n\n[<img alt=\"renancouto\" src=\"https://avatars0.githubusercontent.com/u/230893?v=4&s=117\" width=\"117\">](https://github.com/renancouto) |[<img alt=\"sgrillon14\" src=\"https://avatars0.githubusercontent.com/u/5530550?v=4&s=117\" width=\"117\">](https://github.com/sgrillon14) |[<img alt=\"tobiasbueschel\" src=\"https://avatars3.githubusercontent.com/u/13087421?v=4&s=117\" width=\"117\">](https://github.com/tobiasbueschel) |[<img alt=\"raspo\" src=\"https://avatars2.githubusercontent.com/u/927264?v=4&s=117\" width=\"117\">](https://github.com/raspo) |[<img alt=\"varunkumar\" src=\"https://avatars1.githubusercontent.com/u/509433?v=4&s=117\" width=\"117\">](https://github.com/varunkumar) |[<img alt=\"theghostbel\" src=\"https://avatars2.githubusercontent.com/u/482899?v=4&s=117\" width=\"117\">](https://github.com/theghostbel) |\n:---: |:---: |:---: |:---: |:---: |:---: |\n[renancouto](https://github.com/renancouto) |[sgrillon14](https://github.com/sgrillon14) |[tobiasbueschel](https://github.com/tobiasbueschel) |[raspo](https://github.com/raspo) |[varunkumar](https://github.com/varunkumar) |[theghostbel](https://github.com/theghostbel) |\n\n[<img alt=\"vitalics\" src=\"https://avatars2.githubusercontent.com/u/8816260?v=4&s=117\" width=\"117\">](https://github.com/vitalics) |[<img alt=\"aha-oretama\" src=\"https://avatars0.githubusercontent.com/u/7259161?v=4&s=117\" width=\"117\">](https://github.com/aha-oretama) |[<img alt=\"bsmithb2\" src=\"https://avatars2.githubusercontent.com/u/1773789?v=4&s=117\" width=\"117\">](https://github.com/bsmithb2) |[<img alt=\"link89\" src=\"https://avatars2.githubusercontent.com/u/3314130?v=4&s=117\" width=\"117\">](https://github.com/link89) |[<img alt=\"murajun1978\" src=\"https://avatars3.githubusercontent.com/u/911903?v=4&s=117\" width=\"117\">](https://github.com/murajun1978) |[<img alt=\"pietrovich\" src=\"https://avatars2.githubusercontent.com/u/1728613?v=4&s=117\" width=\"117\">](https://github.com/pietrovich) |\n:---: |:---: |:---: |:---: |:---: |:---: |\n[vitalics](https://github.com/vitalics) |[aha-oretama](https://github.com/aha-oretama) |[bsmithb2](https://github.com/bsmithb2) |[link89](https://github.com/link89) |[murajun1978](https://github.com/murajun1978) |[pietrovich](https://github.com/pietrovich) |\n\n[<img alt=\"superroma\" src=\"https://avatars0.githubusercontent.com/u/8553464?v=4&s=117\" width=\"117\">](https://github.com/superroma) |[<img alt=\"infctr\" src=\"https://avatars1.githubusercontent.com/u/15550153?v=4&s=117\" width=\"117\">](https://github.com/infctr) |[<img alt=\"intermike\" src=\"https://avatars0.githubusercontent.com/u/10540148?v=4&s=117\" width=\"117\">](https://github.com/intermike) |[<img alt=\"DevSide\" src=\"https://avatars2.githubusercontent.com/u/6873926?v=4&s=117\" width=\"117\">](https://github.com/DevSide) |[<img alt=\"b12031106\" src=\"https://avatars1.githubusercontent.com/u/2063566?v=4&s=117\" width=\"117\">](https://github.com/b12031106) |\n:---: |:---: |:---: |:---: |:---: |\n[superroma](https://github.com/superroma) |[infctr](https://github.com/infctr) |[intermike](https://github.com/intermike) |[DevSide](https://github.com/DevSide) |[b12031106](https://github.com/b12031106) |\n\n## Plugins\n\nTestCafe developers and community members made these plugins:\n\n* **Browser Providers**<br/>\n  Allow you to use TestCafe with cloud browser providers and emulators.\n  * [SauceLabs provider](https://github.com/DevExpress/testcafe-browser-provider-saucelabs) (by [@AndreyBelym](https://github.com/AndreyBelym))\n  * [BrowserStack provider](https://github.com/DevExpress/testcafe-browser-provider-browserstack) (by [@AndreyBelym](https://github.com/AndreyBelym))\n  * [CrossBrowserTesting provider](https://github.com/sijosyn/testcafe-browser-provider-crossbrowsertesting) (by [@sijosyn](https://github.com/sijosyn))\n  * [Nightmare headless provider](https://github.com/ryx/testcafe-browser-provider-nightmare) (by [@ryx](https://github.com/ryx))\n  * [fbsimctl iOS emulator](https://github.com/Ents24/testcafe-browser-provider-fbsimctl) (by [@ents24](https://github.com/Ents24))\n  * [Electron](https://github.com/DevExpress/testcafe-browser-provider-electron) (by [@AndreyBelym](https://github.com/AndreyBelym))\n  * [Puppeteer](https://github.com/jdobosz/testcafe-browser-provider-puppeteer) (by [@jdobosz](https://github.com/jdobosz))\n\n* **Framework-Specific Selectors**<br/>\n  Work with page elements in a way that is native to your framework.\n  * [React](https://github.com/DevExpress/testcafe-react-selectors) (by [@kirovboris](https://github.com/kirovboris))\n  * [Angular](https://github.com/DevExpress/testcafe-angular-selectors) (by [@miherlosev](https://github.com/miherlosev))\n  * [Vue](https://github.com/devexpress/testcafe-vue-selectors) (by [@miherlosev](https://github.com/miherlosev))\n  * [Aurelia](https://github.com/miherlosev/testcafe-aurelia-selectors) (by [@miherlosev](https://github.com/miherlosev))\n\n* **Plugins for Task Runners**<br/>\n  Integrate TestCafe into your project's workflow.\n  * [Grunt](https://github.com/crudo/grunt-testcafe) (by [@crudo](https://github.com/crudo))\n  * [Gulp](https://github.com/DevExpress/gulp-testcafe) (by [@inikulin](https://github.com/inikulin))\n\n* **Custom Reporters**<br/>\n  View test results in different formats.\n  * [TeamCity](https://github.com/Soluto/testcafe-reporter-teamcity) (by [@nirsky](https://github.com/nirsky))\n  * [Slack](https://github.com/Shafied/testcafe-reporter-slack) (by [@Shafied](https://github.com/Shafied))\n  * [NUnit](https://github.com/AndreyBelym/testcafe-reporter-nunit) (by [@AndreyBelym](https://github.com/AndreyBelym))\n  * [TimeCafe](https://github.com/jimthedev/timecafe) (by [@jimthedev](https://github.com/jimthedev))\n\n* **Test Accessibility**<br/>\n  Find accessibility issues in your web app.\n  * [axe-testcafe](https://github.com/helen-dikareva/axe-testcafe) (by [@helen-dikareva](https://github.com/helen-dikareva))\n\n* **IDE Plugins**<br/>\n  Run tests and view results from your favorite IDE.\n  * [Visual Studio Code](https://github.com/romanresh/vscode-testcafe) (by [@romanresh](https://github.com/romanresh))\n  * [SublimeText](https://github.com/churkin/testcafe-sublimetext) (by [@churkin](https://github.com/churkin))\n\n* **ESLint**<br/>\n  Use ESLint when writing and editing TestCafe tests.\n  * [ESLint plugin](https://github.com/miherlosev/eslint-plugin-testcafe) (by [@miherlosev](https://github.com/miherlosev))\n\n## Different Versions of TestCafe\n\nThere is a line of products called `TestCafe`. Below are the similarities and key differences between them.\n\n* All three versions share the same core features:\n  * No need for WebDriver, browser plugins or other tools.\n  * Cross-platform and cross-browser out of the box.\n\n* [**TestCafe**](https://testcafe.devexpress.com/)<br/>\n  *first released in 2013, commercial web application*\n  * Visual Test Recorder and web GUI to create, edit and run tests.\n  * You can record tests or edit them as JavaScript code.\n\n* [**TestCafe**](https://devexpress.github.io/testcafe) - you are here<br/>\n  *first released in 2016, free and open-source node.js application*\n  * You can write tests in the latest JavaScript or TypeScript.\n  * Clearer and more flexible [API](https://devexpress.github.io/testcafe/documentation/test-api/) supports ES6 and [PageModel pattern](https://devexpress.github.io/testcafe/documentation/recipes/using-page-model.html).\n  * More stable tests due to the [Smart Assertion Query Mechanism](https://devexpress.github.io/testcafe/documentation/test-api/assertions/#smart-assertion-query-mechanism).\n  * Tests run faster due to improved [Automatic Waiting Mechanism](https://devexpress.github.io/testcafe/documentation/test-api/waiting-for-page-elements-to-appear.html) and [Concurrent Test Execution](https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/concurrent-test-execution.html).\n  * Easy integration: it is a node.js solution with CLI and reporters for popular CI systems.\n  * You can extend it with [plugins](#plugins) and other Node.js modules.\n\n* [**TestCafe Studio**](https://www.devexpress.com/products/testcafestudio/?utm_source=github.com&utm_medium=referral&utm_campaign=tc-gh-diff)<br/>\n  *Preview released in 2018, commercial desktop application*\n  * Based on the open-source TestCafe, and supports its major features.\n  * You can record tests or edit them as JavaScript or TypeScript code.\n  * New [Visual Test Recorder](https://docs.devexpress.com/TestCafeStudio/400165/guides/record-tests?utm_source=github.com&utm_medium=referral&utm_campaign=tc-gh-diff) and [IDE-like GUI](https://docs.devexpress.com/TestCafeStudio/400176/guides/write-test-scripts?utm_source=github.com&utm_medium=referral&utm_campaign=tc-gh-diff) to record, edit, run and debug tests.\n  * Currently available as a free preview version. The release version will replace the 2013 version of TestCafe.\n\n## Badge\n\nShow everyone you are using TestCafe: ![Tested with TestCafe](https://img.shields.io/badge/tested%20with-TestCafe-2fa4cf.svg)\n\nTo display this badge, add the following code to your repository readme:\n\n```html\n<a href=\"https://github.com/DevExpress/testcafe\">\n    <img alt=\"Tested with TestCafe\" src=\"https://img.shields.io/badge/tested%20with-TestCafe-2fa4cf.svg\">\n</a>\n```\n\n## Thanks to BrowserStack\n\nWe are grateful to BrowserStack for providing the infrastructure that we use to test code in this repository.\n\n<a href=\"https://www.browserstack.com/\"><img alt=\"BrowserStack Logo\" src=\"https://raw.github.com/DevExpress/testcafe/master/media/BrowserStack.png\"/></a>\n\n## License\n\nCode released under the [MIT license](LICENSE).\n\n## Creators\n\nDeveloper Express Inc. ([https://devexpress.com](https://devexpress.com))\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DevExpress/testcafe.git"
  },
  "scripts": {
    "prepublish": "publish-please guard",
    "publish-please": "del-cli package-lock.json node_modules && npm i && publish-please",
    "test": "gulp travis"
  },
  "types": "ts-defs/index.d.ts",
  "version": "1.1.1-alpha.2"
}
